// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// anova_cuda
SEXP anova_cuda(const NumericMatrix& vX, const NumericVector& vN, const NumericMatrix& vsigma, const NumericMatrix& mu, const NumericVector& vtau, Nullable<NumericMatrix> vpair, int B, double alpha, int method, int R, int nblock, int threads_per_block, int seed);
RcppExport SEXP _hdanova_cuda_anova_cuda(SEXP vXSEXP, SEXP vNSEXP, SEXP vsigmaSEXP, SEXP muSEXP, SEXP vtauSEXP, SEXP vpairSEXP, SEXP BSEXP, SEXP alphaSEXP, SEXP methodSEXP, SEXP RSEXP, SEXP nblockSEXP, SEXP threads_per_blockSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type vX(vXSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type vN(vNSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type vsigma(vsigmaSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type vtau(vtauSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericMatrix> >::type vpair(vpairSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type R(RSEXP);
    Rcpp::traits::input_parameter< int >::type nblock(nblockSEXP);
    Rcpp::traits::input_parameter< int >::type threads_per_block(threads_per_blockSEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    rcpp_result_gen = Rcpp::wrap(anova_cuda(vX, vN, vsigma, mu, vtau, vpair, B, alpha, method, R, nblock, threads_per_block, seed));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hdanova_cuda_anova_cuda", (DL_FUNC) &_hdanova_cuda_anova_cuda, 13},
    {NULL, NULL, 0}
};

RcppExport void R_init_hdanova_cuda(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
